plugins {
    id 'java-library'
    id 'maven-publish'
    id 'jacoco'
    id 'com.diffplug.spotless' version '6.2.0'
    id 'net.ltgt.errorprone' version '2.0.2'
}

repositories { mavenCentral() }

ext {
    junitVersion = '5.8.2'
    errorproneVersion = '2.10.0'
    autoServiceVersion = '1.0.1'
}

dependencies {
    compileOnly "com.google.errorprone:error_prone_check_api:${errorproneVersion}"
    compileOnly "com.google.auto.service:auto-service:${autoServiceVersion}"
    annotationProcessor "com.google.auto.service:auto-service:${autoServiceVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "com.google.errorprone:error_prone_test_helpers:${errorproneVersion}"
    errorprone "com.google.errorprone:error_prone_core:${errorproneVersion}"
}

tasks.withType(JavaCompile) {
    options.release = 11
    // disable warnings in generated code by immutables
    // https://github.com/google/error-prone/issues/329
    options.errorprone.disableWarningsInGeneratedCode = true
}

test {
    useJUnitPlatform()
    // Starting in JDK 16 the default disallows access to internal javac APIs
    // https://github.com/google/error-prone/pull/2015
    jvmArgs += [
        '--add-exports',
        'jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED',
        '--add-exports',
        'jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED',
        '--add-exports',
        'jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED',
        '--add-exports',
        'jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED',
        '--add-exports',
        'jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED',
        '--add-exports',
        'jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED',
        '--add-exports',
        'jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED',
        '--add-exports',
        'jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED',
    ]
}

tasks.named('check').configure {
    dependsOn 'jacocoTestReport'
}

spotless {
    java {
        removeUnusedImports()
        googleJavaFormat()
    }
    groovyGradle {
        target '**/*.gradle'
        greclipse()
        indentWithSpaces()
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

defaultTasks 'spotlessApply', 'build'
